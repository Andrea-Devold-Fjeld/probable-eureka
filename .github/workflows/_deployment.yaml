on:
  push:
    branches: [develop, stage, main]

jobs:
  dev:
    name: deploy cloudrun to dev environment
    if: ${{ github.ref == 'refs/heads/develop' || github.base_ref == 'develop' }}
    uses: ./.github/workflows/_deployment.yaml
    permissions:
      id-token: write
      contents: read
    with:
      environment: dev
      ref: ${{ github.sha }}
    secrets: inherit
  stage:
    if: ${{ github.ref == 'refs/heads/stage' || github.base_ref == 'stage' }}
    uses: ./.github/workflows/_deployment.yaml
    permissions:
      id-token: write
      contents: read
    with:
      environment: stage
      ref: ${{ github.sha }}
    secrets: inherit
  prod:
    if: ${{ github.ref == 'refs/heads/main' || github.base_ref == 'main' }}
    uses: ./.github/workflows/_deployment.yaml
    permissions:
      id-token: write
      contents: read
    with:
      environment: prod
      ref: ${{ github.sha }}
    secrets: inherit

  build-and-push:
    name: Build && Push && Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ vars.REGION }}-docker.pkg.dev'
      - name: Build, tag and oush container
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ${{ vars.code_directory }}
          push: true
          tags: |
            ${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}:${{ inputs.ref }}